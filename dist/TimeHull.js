"use strict";function _classCallCheck(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,i){for(var e=0;e<i.length;e++){var n=i[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,i,e){return i&&_defineProperties(t.prototype,i),e&&_defineProperties(t,e),t}var areaPolygon=require("area-polygon"),hull=require("hull.js"),TimeHull=function(){function a(t){var i=this;_classCallCheck(this,a);var e=t||{},n=e.seriesPoints,s=e.width,o=e.height,r=e.startIndex,h=e.endIndex;if(void 0===n||!n.length)throw new Error("noSeriesPoints");this.seriesPoints=function(){return n},this.width=s||0,this.height=o||0,this.startIndex=r||0,this.endIndex=h||n.length-1,this.points=this.getSlicedPoints(),this.name=this.endTime(),this.duration=function(){return n[i.endIndex+1]?n[i.endIndex+1].timestamp-i.endTime():0}}return _createClass(a,[{key:"getArea",value:function(t){if(t=t||{},void 0===this.area||t.points){var i=t&&t.points||this.points,e=a.distinctPoints(this.polygon({points:i}));if(e.length<3)return 0;this.area=areaPolygon(e)}return this.area}},{key:"azimuth",value:function(){var t;if(this.points&&1<this.points.length){var i=this.points[this.points.length-2],e=this.points[this.points.length-1];i.x===e.x&&i.y===e.y?t=0:(t=90-180*Math.atan2(e.y-i.y,e.x-i.x)/Math.PI,t<0&&(t+=360))}return t}},{key:"getCentroid",value:function(t){var i=(t||{}).which;if(void 0===this.centroid){var e=this.points.slice();if(1===e.length&&(this.centroid={x:e[0].x,y:e[0].y}),2===e.length&&(this.centroid={x:(e[0].x+e[1].x)/2,y:(e[0].y+e[1].y)/2}),2<e.length){var n=a.distinctPoints(this.polygon({points:e}));this.centroid=a.calculateCentroid(n)}}return void 0!==i&&void 0!==this.centroid?this.centroid[i]:this.centroid}},{key:"getCoverage",value:function(t){if(t=t||{},void 0===this.coverage||t.points){var i=t&&t.points||this.points,e=t&&t.width||this.width,n=t&&t.height||this.height,s=this.getArea({points:i});if(0===s)this.coverage=0;else{if(e*n==0)throw new Error("noStimulusArea");this.coverage=s/(e*n)}}return this.coverage}},{key:"coverageDuration",value:function(t){return this.getCoverage(t)*this.duration()}},{key:"coveragePercent",value:function(t){var i=t&&t.points||this.points;return 100*this.getCoverage({points:i})}},{key:"distance",value:function(t){return void 0!==t?this.points&&1<this.points.length?this.points[this.points.length-1][t]-this.points[this.points.length-2][t]:0:Math.sqrt(this.distance("x")*this.distance("x")+this.distance("y")*this.distance("y"))}},{key:"elapsedTime",value:function(){return this.endTime()-this.seriesPoints()[0].timestamp}},{key:"endTime",value:function(){return this.points[this.points.length-1].timestamp}},{key:"getPoints",value:function(i){return void 0!==i?this.points.map(function(t){return t[i]}):this.points}},{key:"getSlicedPoints",value:function(i){var t=this.seriesPoints().slice(this.startIndex,this.endIndex+1);return void 0!==i?t.map(function(t){return t[i]}):t}},{key:"lastPoint",value:function(){return this.points[this.points.length-1]}},{key:"period",value:function(){return this.endTime()-this.startTime()}},{key:"polygon",value:function(t){var i=t&&t.points||this.points,e=(t||{}).which,n=hull(a.XYToCoordinates(i),1/0);return n=a.coordinatesToXY(n),void 0!==e?n.map(function(t){return t[e]}):n}},{key:"startTime",value:function(){return this.points[0].timestamp}},{key:"timestep",value:function(){return this.points&&1<this.points.length?this.points[this.points.length-1].timestamp-this.points[this.points.length-2].timestamp:0}},{key:"velocity",value:function(t){return 0<this.timestep()&&0<this.distance()?this.distance(t)/this.timestep():0}}],[{key:"calculateCentroid",value:function(t){var i=t.slice();if(1===i.length)return{x:i[0].x,y:i[0].y};var e=i[0],n=i[i.length-1];e.x===n.x&&e.y===n.y||i.push(e);for(var s,o,r,h=0,a=0,u=0,l=i.length,c=0,p=l-1;c<l;c+=1)s=i[c],o=i[p],h+=r=s.x*o.y-o.x*s.y,a+=(s.x+o.x)*r,u+=(s.y+o.y)*r,p=c;return{x:a/(r=3*h),y:u/r}}},{key:"coordinatesToXY",value:function(t){return t.map(function(t){return{x:t[0],y:t[1]}})}},{key:"distinctPoints",value:function(e){for(var t=[],i=function(i){t.findIndex(function(t){return t.x===e[i].x&&t.y===e[i].y})<0&&t.push(e[i])},n=0;n<e.length;n+=1)i(n);return t}},{key:"XYToCoordinates",value:function(t){return t.map(function(t){return[t.x,t.y]})}}]),a}();module.exports=TimeHull;